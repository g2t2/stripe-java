// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.Recipient;
import com.stripe.model.RecipientCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.RecipientCreateParams;
import com.stripe.param.RecipientDeleteParams;
import com.stripe.param.RecipientListParams;
import com.stripe.param.RecipientRetrieveParams;
import com.stripe.param.RecipientUpdateParams;

public class RecipientService extends ApiService {
  /**
   * Updates the specified recipient by setting the values of the parameters passed. Any parameters
   * not provided will be left unchanged.
   *
   * <p>If you update the name or tax ID, the identity verification will automatically be rerun. If
   * you update the bank account, the bank account validation will automatically be rerun.
   */
  public Recipient update(String id, RecipientUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates the specified recipient by setting the values of the parameters passed. Any parameters
   * not provided will be left unchanged.
   *
   * <p>If you update the name or tax ID, the identity verification will automatically be rerun. If
   * you update the bank account, the bank account validation will automatically be rerun.
   */
  public Recipient update(String id, RecipientUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/recipients/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Recipient.class, options);
  }

  /**
   * Retrieves the details of an existing recipient. You need only supply the unique recipient
   * identifier that was returned upon recipient creation.
   */
  public Recipient retrieve(String id, RecipientRetrieveParams params) throws StripeException {
    return retrieve(id, params, (RequestOptions) null);
  }

  /**
   * Retrieves the details of an existing recipient. You need only supply the unique recipient
   * identifier that was returned upon recipient creation.
   */
  public Recipient retrieve(String id, RecipientRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/recipients/%s", id);
    return request(ApiResource.RequestMethod.GET, url, params, Recipient.class, options);
  }

  /**
   * Creates a new <code>Recipient</code> object and verifies the recipient’s identity. Also
   * verifies the recipient’s bank account information or debit card, if either is provided.
   */
  public Recipient create(RecipientCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /**
   * Creates a new <code>Recipient</code> object and verifies the recipient’s identity. Also
   * verifies the recipient’s bank account information or debit card, if either is provided.
   */
  public Recipient create(RecipientCreateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/recipients");
    return request(ApiResource.RequestMethod.POST, url, params, Recipient.class, options);
  }

  /**
   * Returns a list of your recipients. The recipients are returned sorted by creation date, with
   * the most recently created recipients appearing first.
   */
  public RecipientCollection list(RecipientListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of your recipients. The recipients are returned sorted by creation date, with
   * the most recently created recipients appearing first.
   */
  public RecipientCollection list(RecipientListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/recipients");
    return requestCollection(url, params, RecipientCollection.class, options);
  }

  /** Permanently deletes a recipient. It cannot be undone. */
  public Recipient delete(String id, RecipientDeleteParams params) throws StripeException {
    return delete(id, params, (RequestOptions) null);
  }

  /** Permanently deletes a recipient. It cannot be undone. */
  public Recipient delete(String id, RecipientDeleteParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/recipients/%s", id);
    return request(ApiResource.RequestMethod.DELETE, url, params, Recipient.class, options);
  }
}
