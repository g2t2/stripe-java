// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service.radar;

import com.stripe.exception.StripeException;
import com.stripe.model.radar.ValueList;
import com.stripe.model.radar.ValueListCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.radar.ValueListCreateParams;
import com.stripe.param.radar.ValueListDeleteParams;
import com.stripe.param.radar.ValueListListParams;
import com.stripe.param.radar.ValueListRetrieveParams;
import com.stripe.param.radar.ValueListUpdateParams;

public class ValueListService extends ApiService {
  /**
   * Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any
   * parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.
   */
  public ValueList update(String id, ValueListUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any
   * parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.
   */
  public ValueList update(String id, ValueListUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/radar/value_lists/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, ValueList.class, options);
  }

  /** Creates a new <code>ValueList</code> object, which can then be referenced in rules. */
  public ValueList create(ValueListCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /** Creates a new <code>ValueList</code> object, which can then be referenced in rules. */
  public ValueList create(ValueListCreateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/radar/value_lists");
    return request(ApiResource.RequestMethod.POST, url, params, ValueList.class, options);
  }

  /** Retrieves a <code>ValueList</code> object. */
  public ValueList retrieve(String valueList, ValueListRetrieveParams params)
      throws StripeException {
    return retrieve(valueList, params, (RequestOptions) null);
  }

  /** Retrieves a <code>ValueList</code> object. */
  public ValueList retrieve(
      String valueList, ValueListRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/radar/value_lists/%s", valueList);
    return request(ApiResource.RequestMethod.GET, url, params, ValueList.class, options);
  }

  /**
   * Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by
   * creation date, with the most recently created object appearing first.
   */
  public ValueListCollection list(ValueListListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by
   * creation date, with the most recently created object appearing first.
   */
  public ValueListCollection list(ValueListListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/radar/value_lists");
    return requestCollection(url, params, ValueListCollection.class, options);
  }

  /**
   * Deletes a <code>ValueList</code> object, also deleting any items contained within the value
   * list. To be deleted, a value list must not be referenced in any rules.
   */
  public ValueList delete(String id, ValueListDeleteParams params) throws StripeException {
    return delete(id, params, (RequestOptions) null);
  }

  /**
   * Deletes a <code>ValueList</code> object, also deleting any items contained within the value
   * list. To be deleted, a value list must not be referenced in any rules.
   */
  public ValueList delete(String id, ValueListDeleteParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/radar/value_lists/%s", id);
    return request(ApiResource.RequestMethod.DELETE, url, params, ValueList.class, options);
  }
}
