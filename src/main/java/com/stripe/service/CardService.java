// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.Card;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.CardDeleteOnAccountParams;
import com.stripe.param.CardDeleteOnCustomerParams;
import com.stripe.param.CardUpdateOnAccountParams;
import com.stripe.param.CardUpdateOnCustomerParams;

public class CardService extends ApiService {
  /**
   * If you need to update only some card details, like the billing address or expiration date, you
   * can do so without having to re-enter the full card details. Stripe also works directly with
   * card networks so that your customers can <a
   * href="https://stripe.com/docs/saving-cards#automatic-card-updates">continue using your
   * service</a> without interruption.
   *
   * <p>Updates a specified card for a given customer.
   */
  public Card update(String account, String id, CardUpdateOnAccountParams params)
      throws StripeException {
    return update(account, id, params, (RequestOptions) null);
  }

  /**
   * If you need to update only some card details, like the billing address or expiration date, you
   * can do so without having to re-enter the full card details. Stripe also works directly with
   * card networks so that your customers can <a
   * href="https://stripe.com/docs/saving-cards#automatic-card-updates">continue using your
   * service</a> without interruption.
   *
   * <p>Updates a specified card for a given customer.
   */
  public Card update(
      String account, String id, CardUpdateOnAccountParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/external_accounts/%s", account, id);
    return request(ApiResource.RequestMethod.POST, url, params, Card.class, options);
  }

  /**
   * If you need to update only some card details, like the billing address or expiration date, you
   * can do so without having to re-enter the full card details. Stripe also works directly with
   * card networks so that your customers can <a
   * href="https://stripe.com/docs/saving-cards#automatic-card-updates">continue using your
   * service</a> without interruption.
   *
   * <p>Updates a specified card for a given customer.
   */
  public Card update(String customer, String id, CardUpdateOnCustomerParams params)
      throws StripeException {
    return update(customer, id, params, (RequestOptions) null);
  }

  /**
   * If you need to update only some card details, like the billing address or expiration date, you
   * can do so without having to re-enter the full card details. Stripe also works directly with
   * card networks so that your customers can <a
   * href="https://stripe.com/docs/saving-cards#automatic-card-updates">continue using your
   * service</a> without interruption.
   *
   * <p>Updates a specified card for a given customer.
   */
  public Card update(
      String customer, String id, CardUpdateOnCustomerParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/customers/%s/sources/%s", customer, id);
    return request(ApiResource.RequestMethod.POST, url, params, Card.class, options);
  }

  /**
   * Delete a specified external account for a given account.
   *
   * <p>Delete a specified source for a given customer.
   */
  public Card delete(String account, String id, CardDeleteOnAccountParams params)
      throws StripeException {
    return delete(account, id, params, (RequestOptions) null);
  }

  /**
   * Delete a specified external account for a given account.
   *
   * <p>Delete a specified source for a given customer.
   */
  public Card delete(
      String account, String id, CardDeleteOnAccountParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/external_accounts/%s", account, id);
    return request(ApiResource.RequestMethod.DELETE, url, params, Card.class, options);
  }

  /**
   * Delete a specified external account for a given account.
   *
   * <p>Delete a specified source for a given customer.
   */
  public Card delete(String customer, String id, CardDeleteOnCustomerParams params)
      throws StripeException {
    return delete(customer, id, params, (RequestOptions) null);
  }

  /**
   * Delete a specified external account for a given account.
   *
   * <p>Delete a specified source for a given customer.
   */
  public Card delete(
      String customer, String id, CardDeleteOnCustomerParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/customers/%s/sources/%s", customer, id);
    return request(ApiResource.RequestMethod.DELETE, url, params, Card.class, options);
  }
}
