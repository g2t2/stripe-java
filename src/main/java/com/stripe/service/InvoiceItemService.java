// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.InvoiceItem;
import com.stripe.model.InvoiceItemCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.InvoiceItemCreateParams;
import com.stripe.param.InvoiceItemDeleteParams;
import com.stripe.param.InvoiceItemListParams;
import com.stripe.param.InvoiceItemRetrieveParams;
import com.stripe.param.InvoiceItemUpdateParams;

public class InvoiceItemService extends ApiService {
  /**
   * Updates the amount or description of an invoice item on an upcoming invoice. Updating an
   * invoice item is only possible before the invoice it’s attached to is closed.
   */
  public InvoiceItem update(String id, InvoiceItemUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates the amount or description of an invoice item on an upcoming invoice. Updating an
   * invoice item is only possible before the invoice it’s attached to is closed.
   */
  public InvoiceItem update(String id, InvoiceItemUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/invoiceitems/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, InvoiceItem.class, options);
  }

  /** Retrieves the invoice item with the given ID. */
  public InvoiceItem retrieve(String invoiceitem, InvoiceItemRetrieveParams params)
      throws StripeException {
    return retrieve(invoiceitem, params, (RequestOptions) null);
  }

  /** Retrieves the invoice item with the given ID. */
  public InvoiceItem retrieve(
      String invoiceitem, InvoiceItemRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/invoiceitems/%s", invoiceitem);
    return request(ApiResource.RequestMethod.GET, url, params, InvoiceItem.class, options);
  }

  /**
   * Creates an item to be added to a draft invoice. If no invoice is specified, the item will be on
   * the next invoice created for the customer specified.
   */
  public InvoiceItem create(InvoiceItemCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /**
   * Creates an item to be added to a draft invoice. If no invoice is specified, the item will be on
   * the next invoice created for the customer specified.
   */
  public InvoiceItem create(InvoiceItemCreateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/invoiceitems");
    return request(ApiResource.RequestMethod.POST, url, params, InvoiceItem.class, options);
  }

  /**
   * Returns a list of your invoice items. Invoice items are returned sorted by creation date, with
   * the most recently created invoice items appearing first.
   */
  public InvoiceItemCollection list(InvoiceItemListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of your invoice items. Invoice items are returned sorted by creation date, with
   * the most recently created invoice items appearing first.
   */
  public InvoiceItemCollection list(InvoiceItemListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/invoiceitems");
    return requestCollection(url, params, InvoiceItemCollection.class, options);
  }

  /**
   * Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible
   * when they’re not attached to invoices, or if it’s attached to a draft invoice.
   */
  public InvoiceItem delete(String id, InvoiceItemDeleteParams params) throws StripeException {
    return delete(id, params, (RequestOptions) null);
  }

  /**
   * Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible
   * when they’re not attached to invoices, or if it’s attached to a draft invoice.
   */
  public InvoiceItem delete(String id, InvoiceItemDeleteParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/invoiceitems/%s", id);
    return request(ApiResource.RequestMethod.DELETE, url, params, InvoiceItem.class, options);
  }
}
