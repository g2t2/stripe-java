// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.Coupon;
import com.stripe.model.CouponCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.CouponCreateParams;
import com.stripe.param.CouponDeleteParams;
import com.stripe.param.CouponListParams;
import com.stripe.param.CouponRetrieveParams;
import com.stripe.param.CouponUpdateParams;

public class CouponService extends ApiService {
  /**
   * Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by
   * design, not editable.
   */
  public Coupon update(String id, CouponUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by
   * design, not editable.
   */
  public Coupon update(String id, CouponUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/coupons/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Coupon.class, options);
  }

  /** Retrieves the coupon with the given ID. */
  public Coupon retrieve(String coupon, CouponRetrieveParams params) throws StripeException {
    return retrieve(coupon, params, (RequestOptions) null);
  }

  /** Retrieves the coupon with the given ID. */
  public Coupon retrieve(String coupon, CouponRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/coupons/%s", coupon);
    return request(ApiResource.RequestMethod.GET, url, params, Coupon.class, options);
  }

  /**
   * You can create coupons easily via the <a href="https://dashboard.stripe.com/coupons">coupon
   * management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if
   * you need to create coupons on the fly.
   *
   * <p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>
   * currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any
   * invoice’s subtotal. For example, an invoice with a subtotal of 100 will have a final total of 0
   * if a coupon with an <code>amount_off</code> of 200 is applied to it and an invoice with a
   * subtotal of 300 will have a final total of 100 if a coupon with an <code>amount_off</code> of
   * 200 is applied to it.
   */
  public Coupon create(CouponCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /**
   * You can create coupons easily via the <a href="https://dashboard.stripe.com/coupons">coupon
   * management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if
   * you need to create coupons on the fly.
   *
   * <p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>
   * currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any
   * invoice’s subtotal. For example, an invoice with a subtotal of 100 will have a final total of 0
   * if a coupon with an <code>amount_off</code> of 200 is applied to it and an invoice with a
   * subtotal of 300 will have a final total of 100 if a coupon with an <code>amount_off</code> of
   * 200 is applied to it.
   */
  public Coupon create(CouponCreateParams params, RequestOptions options) throws StripeException {
    String url = resourceUrl("/v1/coupons");
    return request(ApiResource.RequestMethod.POST, url, params, Coupon.class, options);
  }

  /** Returns a list of your coupons. */
  public CouponCollection list(CouponListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /** Returns a list of your coupons. */
  public CouponCollection list(CouponListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/coupons");
    return requestCollection(url, params, CouponCollection.class, options);
  }

  /**
   * You can delete coupons via the <a href="https://dashboard.stripe.com/coupons">coupon
   * management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any
   * customers who have already applied the coupon; it means that new customers can’t redeem the
   * coupon. You can also delete coupons via the API.
   */
  public Coupon delete(String id, CouponDeleteParams params) throws StripeException {
    return delete(id, params, (RequestOptions) null);
  }

  /**
   * You can delete coupons via the <a href="https://dashboard.stripe.com/coupons">coupon
   * management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any
   * customers who have already applied the coupon; it means that new customers can’t redeem the
   * coupon. You can also delete coupons via the API.
   */
  public Coupon delete(String id, CouponDeleteParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/coupons/%s", id);
    return request(ApiResource.RequestMethod.DELETE, url, params, Coupon.class, options);
  }
}
