// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.Order;
import com.stripe.model.OrderCollection;
import com.stripe.model.OrderReturn;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.OrderCreateParams;
import com.stripe.param.OrderListParams;
import com.stripe.param.OrderPayParams;
import com.stripe.param.OrderRetrieveParams;
import com.stripe.param.OrderReturnOrderParams;
import com.stripe.param.OrderUpdateParams;

public class OrderService extends ApiService {
  /** Pay an order by providing a <code>source</code> to create a payment. */
  public Order pay(String id, OrderPayParams params) throws StripeException {
    return pay(id, params, (RequestOptions) null);
  }

  /** Pay an order by providing a <code>source</code> to create a payment. */
  public Order pay(String id, OrderPayParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/orders/%s/pay", id);
    return request(ApiResource.RequestMethod.POST, url, params, Order.class, options);
  }

  /**
   * Updates the specific order by setting the values of the parameters passed. Any parameters not
   * provided will be left unchanged.
   */
  public Order update(String id, OrderUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates the specific order by setting the values of the parameters passed. Any parameters not
   * provided will be left unchanged.
   */
  public Order update(String id, OrderUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/orders/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Order.class, options);
  }

  /**
   * Retrieves the details of an existing order. Supply the unique order ID from either an order
   * creation request or the order list, and Stripe will return the corresponding order information.
   */
  public Order retrieve(String id, OrderRetrieveParams params) throws StripeException {
    return retrieve(id, params, (RequestOptions) null);
  }

  /**
   * Retrieves the details of an existing order. Supply the unique order ID from either an order
   * creation request or the order list, and Stripe will return the corresponding order information.
   */
  public Order retrieve(String id, OrderRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/orders/%s", id);
    return request(ApiResource.RequestMethod.GET, url, params, Order.class, options);
  }

  /** Creates a new order object. */
  public Order create(OrderCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /** Creates a new order object. */
  public Order create(OrderCreateParams params, RequestOptions options) throws StripeException {
    String url = resourceUrl("/v1/orders");
    return request(ApiResource.RequestMethod.POST, url, params, Order.class, options);
  }

  /**
   * Return all or part of an order. The order must have a status of <code>paid</code> or <code>
   * fulfilled</code> before it can be returned. Once all items have been returned, the order will
   * become <code>canceled</code> or <code>returned</code> depending on which status the order
   * started in.
   */
  public OrderReturn returnOrder(String id, OrderReturnOrderParams params) throws StripeException {
    return returnOrder(id, params, (RequestOptions) null);
  }

  /**
   * Return all or part of an order. The order must have a status of <code>paid</code> or <code>
   * fulfilled</code> before it can be returned. Once all items have been returned, the order will
   * become <code>canceled</code> or <code>returned</code> depending on which status the order
   * started in.
   */
  public OrderReturn returnOrder(String id, OrderReturnOrderParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/orders/%s/returns", id);
    return request(ApiResource.RequestMethod.POST, url, params, OrderReturn.class, options);
  }

  /**
   * Returns a list of your orders. The orders are returned sorted by creation date, with the most
   * recently created orders appearing first.
   */
  public OrderCollection list(OrderListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of your orders. The orders are returned sorted by creation date, with the most
   * recently created orders appearing first.
   */
  public OrderCollection list(OrderListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/orders");
    return requestCollection(url, params, OrderCollection.class, options);
  }
}
