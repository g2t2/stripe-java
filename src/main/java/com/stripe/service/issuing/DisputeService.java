// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service.issuing;

import com.stripe.exception.StripeException;
import com.stripe.model.issuing.Dispute;
import com.stripe.model.issuing.DisputeCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.issuing.DisputeCreateParams;
import com.stripe.param.issuing.DisputeListParams;
import com.stripe.param.issuing.DisputeRetrieveParams;
import com.stripe.param.issuing.DisputeUpdateParams;

public class DisputeService extends ApiService {
  /** Retrieves an Issuing <code>Dispute</code> object. */
  public Dispute retrieve(String dispute, DisputeRetrieveParams params) throws StripeException {
    return retrieve(dispute, params, (RequestOptions) null);
  }

  /** Retrieves an Issuing <code>Dispute</code> object. */
  public Dispute retrieve(String dispute, DisputeRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/disputes/%s", dispute);
    return request(ApiResource.RequestMethod.GET, url, params, Dispute.class, options);
  }

  /**
   * Updates the specified Issuing <code>Dispute</code> object by setting the values of the
   * parameters passed. Any parameters not provided will be left unchanged.
   */
  public Dispute update(String id, DisputeUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates the specified Issuing <code>Dispute</code> object by setting the values of the
   * parameters passed. Any parameters not provided will be left unchanged.
   */
  public Dispute update(String id, DisputeUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/disputes/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Dispute.class, options);
  }

  /** Creates an Issuing <code>Dispute</code> object. */
  public Dispute create(DisputeCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /** Creates an Issuing <code>Dispute</code> object. */
  public Dispute create(DisputeCreateParams params, RequestOptions options) throws StripeException {
    String url = resourceUrl("/v1/issuing/disputes");
    return request(ApiResource.RequestMethod.POST, url, params, Dispute.class, options);
  }

  /**
   * Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending
   * order by creation date, with the most recently created object appearing first.
   */
  public DisputeCollection list(DisputeListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending
   * order by creation date, with the most recently created object appearing first.
   */
  public DisputeCollection list(DisputeListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/disputes");
    return requestCollection(url, params, DisputeCollection.class, options);
  }
}
