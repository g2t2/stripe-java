// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service.issuing;

import com.stripe.exception.StripeException;
import com.stripe.model.issuing.Card;
import com.stripe.model.issuing.CardCollection;
import com.stripe.model.issuing.CardDetails;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.issuing.CardCreateParams;
import com.stripe.param.issuing.CardDetailsParams;
import com.stripe.param.issuing.CardListParams;
import com.stripe.param.issuing.CardRetrieveParams;
import com.stripe.param.issuing.CardUpdateParams;

public class CardService extends ApiService {
  /**
   * Updates the specified Issuing <code>Card</code> object by setting the values of the parameters
   * passed. Any parameters not provided will be left unchanged.
   */
  public Card update(String id, CardUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates the specified Issuing <code>Card</code> object by setting the values of the parameters
   * passed. Any parameters not provided will be left unchanged.
   */
  public Card update(String id, CardUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/cards/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Card.class, options);
  }

  /** Retrieves an Issuing <code>Card</code> object. */
  public Card retrieve(String card, CardRetrieveParams params) throws StripeException {
    return retrieve(card, params, (RequestOptions) null);
  }

  /** Retrieves an Issuing <code>Card</code> object. */
  public Card retrieve(String card, CardRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/cards/%s", card);
    return request(ApiResource.RequestMethod.GET, url, params, Card.class, options);
  }

  /** Creates an Issuing <code>Card</code> object. */
  public Card create(CardCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /** Creates an Issuing <code>Card</code> object. */
  public Card create(CardCreateParams params, RequestOptions options) throws StripeException {
    String url = resourceUrl("/v1/issuing/cards");
    return request(ApiResource.RequestMethod.POST, url, params, Card.class, options);
  }

  /**
   * For virtual cards only. Retrieves an Issuing <code>Card_details</code> object that contains <a
   * href="/docs/issuing/cards/management#virtual-card-info">the sensitive details</a> of a virtual
   * card.
   */
  public CardDetails details(String id, CardDetailsParams params) throws StripeException {
    return details(id, params, (RequestOptions) null);
  }

  /**
   * For virtual cards only. Retrieves an Issuing <code>Card_details</code> object that contains <a
   * href="/docs/issuing/cards/management#virtual-card-info">the sensitive details</a> of a virtual
   * card.
   */
  public CardDetails details(String id, CardDetailsParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/cards/%s/details", id);
    return request(ApiResource.RequestMethod.GET, url, params, CardDetails.class, options);
  }

  /**
   * Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order
   * by creation date, with the most recently created object appearing first.
   */
  public CardCollection list(CardListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order
   * by creation date, with the most recently created object appearing first.
   */
  public CardCollection list(CardListParams params, RequestOptions options) throws StripeException {
    String url = resourceUrl("/v1/issuing/cards");
    return requestCollection(url, params, CardCollection.class, options);
  }
}
