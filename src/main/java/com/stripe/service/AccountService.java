// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.Account;
import com.stripe.model.AccountCollection;
import com.stripe.model.PersonCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.AccountCreateParams;
import com.stripe.param.AccountDeleteParams;
import com.stripe.param.AccountListParams;
import com.stripe.param.AccountPersonsParams;
import com.stripe.param.AccountRejectParams;
import com.stripe.param.AccountRetrieveParams;
import com.stripe.param.AccountUpdateParams;

public class AccountService extends ApiService {
  /**
   * Returns a list of people associated with the account’s legal entity. The people are returned
   * sorted by creation date, with the most recent people appearing first.
   */
  public PersonCollection persons(String id, AccountPersonsParams params) throws StripeException {
    return persons(id, params, (RequestOptions) null);
  }

  /**
   * Returns a list of people associated with the account’s legal entity. The people are returned
   * sorted by creation date, with the most recent people appearing first.
   */
  public PersonCollection persons(String id, AccountPersonsParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/persons", id);
    return requestCollection(url, params, PersonCollection.class, options);
  }

  /**
   * With <a href="/docs/connect">Connect</a>, you may flag accounts as suspicious.
   *
   * <p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using
   * live-mode keys may only be rejected once all balances are zero.
   */
  public Account reject(String id, AccountRejectParams params) throws StripeException {
    return reject(id, params, (RequestOptions) null);
  }

  /**
   * With <a href="/docs/connect">Connect</a>, you may flag accounts as suspicious.
   *
   * <p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using
   * live-mode keys may only be rejected once all balances are zero.
   */
  public Account reject(String id, AccountRejectParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/reject", id);
    return request(ApiResource.RequestMethod.POST, url, params, Account.class, options);
  }

  /**
   * With <a href="/docs/connect">Connect</a>, you can create Stripe accounts for your users. To do
   * this, you’ll first need to <a
   * href="https://dashboard.stripe.com/account/applications/settings">register your platform</a>.
   *
   * <p>For Standard accounts, parameters other than <code>country</code>, <code>email</code>, and
   * <code>type</code> are used to prefill the account application that we ask the account holder to
   * complete.
   */
  public Account create(AccountCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /**
   * With <a href="/docs/connect">Connect</a>, you can create Stripe accounts for your users. To do
   * this, you’ll first need to <a
   * href="https://dashboard.stripe.com/account/applications/settings">register your platform</a>.
   *
   * <p>For Standard accounts, parameters other than <code>country</code>, <code>email</code>, and
   * <code>type</code> are used to prefill the account application that we ask the account holder to
   * complete.
   */
  public Account create(AccountCreateParams params, RequestOptions options) throws StripeException {
    String url = resourceUrl("/v1/accounts");
    return request(ApiResource.RequestMethod.POST, url, params, Account.class, options);
  }

  /**
   * Updates a connected <a href="/docs/connect/accounts">Express or Custom account</a> by setting
   * the values of the parameters passed. Any parameters not provided are left unchanged. Most
   * parameters can be changed only for Custom accounts. (These are marked <strong>Custom
   * Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by
   * both account types.
   *
   * <p>To update your own account, use the <a
   * href="https://dashboard.stripe.com/account">Dashboard</a>. Refer to our <a
   * href="/docs/connect/updating-accounts">Connect</a> documentation to learn more about updating
   * accounts.
   */
  public Account update(String id, AccountUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * Updates a connected <a href="/docs/connect/accounts">Express or Custom account</a> by setting
   * the values of the parameters passed. Any parameters not provided are left unchanged. Most
   * parameters can be changed only for Custom accounts. (These are marked <strong>Custom
   * Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by
   * both account types.
   *
   * <p>To update your own account, use the <a
   * href="https://dashboard.stripe.com/account">Dashboard</a>. Refer to our <a
   * href="/docs/connect/updating-accounts">Connect</a> documentation to learn more about updating
   * accounts.
   */
  public Account update(String id, AccountUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Account.class, options);
  }

  /** Retrieves the details of an account. */
  public Account retrieve(AccountRetrieveParams params) throws StripeException {
    return retrieve(params, (RequestOptions) null);
  }

  /** Retrieves the details of an account. */
  public Account retrieve(AccountRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/account");
    return request(ApiResource.RequestMethod.GET, url, params, Account.class, options);
  }

  /** Retrieves the details of an account. */
  public Account retrieve(String account, AccountRetrieveParams params) throws StripeException {
    return retrieve(account, params, (RequestOptions) null);
  }

  /** Retrieves the details of an account. */
  public Account retrieve(String account, AccountRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s", account);
    return request(ApiResource.RequestMethod.GET, url, params, Account.class, options);
  }

  /**
   * Returns a list of accounts connected to your platform via <a href="/docs/connect">Connect</a>.
   * If you’re not a platform, the list is empty.
   */
  public AccountCollection list(AccountListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of accounts connected to your platform via <a href="/docs/connect">Connect</a>.
   * If you’re not a platform, the list is empty.
   */
  public AccountCollection list(AccountListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts");
    return requestCollection(url, params, AccountCollection.class, options);
  }

  /**
   * With <a href="/docs/connect">Connect</a>, you may delete Custom accounts you manage.
   *
   * <p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts
   * created using live-mode keys may only be deleted once all balances are zero.
   *
   * <p>If you are looking to close your own account, use the <a
   * href="https://dashboard.stripe.com/account/data">data tab in your account settings</a> instead.
   */
  public Account delete(String id, AccountDeleteParams params) throws StripeException {
    return delete(id, params, (RequestOptions) null);
  }

  /**
   * With <a href="/docs/connect">Connect</a>, you may delete Custom accounts you manage.
   *
   * <p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts
   * created using live-mode keys may only be deleted once all balances are zero.
   *
   * <p>If you are looking to close your own account, use the <a
   * href="https://dashboard.stripe.com/account/data">data tab in your account settings</a> instead.
   */
  public Account delete(String id, AccountDeleteParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s", id);
    return request(ApiResource.RequestMethod.DELETE, url, params, Account.class, options);
  }
}
