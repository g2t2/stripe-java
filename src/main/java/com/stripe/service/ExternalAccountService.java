// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.ExternalAccount;
import com.stripe.model.ExternalAccountCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.ExternalAccountCreateParams;
import com.stripe.param.ExternalAccountDeleteParams;
import com.stripe.param.ExternalAccountListParams;
import com.stripe.param.ExternalAccountRetrieveParams;
import com.stripe.param.ExternalAccountUpdateParams;

public class ExternalAccountService extends ApiService {
  /**
   * Updates the metadata, account holder name, and account holder type of a bank account belonging
   * to a <a href="/docs/connect/custom-accounts">Custom account</a>, and optionally sets it as the
   * default for its currency. Other bank account details are not editable by design.
   *
   * <p>You can re-enable a disabled bank account by performing an update call without providing any
   * arguments or changes.
   */
  public ExternalAccount update(String account, String id, ExternalAccountUpdateParams params)
      throws StripeException {
    return update(account, id, params, (RequestOptions) null);
  }

  /**
   * Updates the metadata, account holder name, and account holder type of a bank account belonging
   * to a <a href="/docs/connect/custom-accounts">Custom account</a>, and optionally sets it as the
   * default for its currency. Other bank account details are not editable by design.
   *
   * <p>You can re-enable a disabled bank account by performing an update call without providing any
   * arguments or changes.
   */
  public ExternalAccount update(
      String account, String id, ExternalAccountUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/external_accounts/%s", account, id);
    return request(ApiResource.RequestMethod.POST, url, params, ExternalAccount.class, options);
  }

  /** Create an external account for a given account. */
  public ExternalAccount create(String account, ExternalAccountCreateParams params)
      throws StripeException {
    return create(account, params, (RequestOptions) null);
  }

  /** Create an external account for a given account. */
  public ExternalAccount create(
      String account, ExternalAccountCreateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/external_accounts", account);
    return request(ApiResource.RequestMethod.POST, url, params, ExternalAccount.class, options);
  }

  /** Retrieve a specified external account for a given account. */
  public ExternalAccount retrieve(String account, String id, ExternalAccountRetrieveParams params)
      throws StripeException {
    return retrieve(account, id, params, (RequestOptions) null);
  }

  /** Retrieve a specified external account for a given account. */
  public ExternalAccount retrieve(
      String account, String id, ExternalAccountRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/external_accounts/%s", account, id);
    return request(ApiResource.RequestMethod.GET, url, params, ExternalAccount.class, options);
  }

  /** List external accounts for an account. */
  public ExternalAccountCollection list(String account, ExternalAccountListParams params)
      throws StripeException {
    return list(account, params, (RequestOptions) null);
  }

  /** List external accounts for an account. */
  public ExternalAccountCollection list(
      String account, ExternalAccountListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/external_accounts", account);
    return requestCollection(url, params, ExternalAccountCollection.class, options);
  }

  /** Delete a specified external account for a given account. */
  public ExternalAccount delete(String account, String id, ExternalAccountDeleteParams params)
      throws StripeException {
    return delete(account, id, params, (RequestOptions) null);
  }

  /** Delete a specified external account for a given account. */
  public ExternalAccount delete(
      String account, String id, ExternalAccountDeleteParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/accounts/%s/external_accounts/%s", account, id);
    return request(ApiResource.RequestMethod.DELETE, url, params, ExternalAccount.class, options);
  }
}
