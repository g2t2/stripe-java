// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.PaymentSource;
import com.stripe.model.PaymentSourceCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.PaymentSourceCreateParams;
import com.stripe.param.PaymentSourceListParams;
import com.stripe.param.PaymentSourceRetrieveParams;

public class PaymentSourceService extends ApiService {
  /**
   * When you create a new credit card, you must specify a customer or recipient on which to create
   * it.
   *
   * <p>If the card’s owner has no default card, then the new card will become the default. However,
   * if the owner already has a default, then it will not change. To change the default, you should
   * either <a href="/docs/api#update_customer">update the customer</a> to have a new <code>
   * default_source</code>, or <a href="/docs/api#update_recipient">update the recipient</a> to have
   * a new <code>default_card</code>.
   */
  public PaymentSource create(String customer, PaymentSourceCreateParams params)
      throws StripeException {
    return create(customer, params, (RequestOptions) null);
  }

  /**
   * When you create a new credit card, you must specify a customer or recipient on which to create
   * it.
   *
   * <p>If the card’s owner has no default card, then the new card will become the default. However,
   * if the owner already has a default, then it will not change. To change the default, you should
   * either <a href="/docs/api#update_customer">update the customer</a> to have a new <code>
   * default_source</code>, or <a href="/docs/api#update_recipient">update the recipient</a> to have
   * a new <code>default_card</code>.
   */
  public PaymentSource create(
      String customer, PaymentSourceCreateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/customers/%s/sources", customer);
    return request(ApiResource.RequestMethod.POST, url, params, PaymentSource.class, options);
  }

  /** Retrieve a specified source for a given customer. */
  public PaymentSource retrieve(String customer, String id, PaymentSourceRetrieveParams params)
      throws StripeException {
    return retrieve(customer, id, params, (RequestOptions) null);
  }

  /** Retrieve a specified source for a given customer. */
  public PaymentSource retrieve(
      String customer, String id, PaymentSourceRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/customers/%s/sources/%s", customer, id);
    return request(ApiResource.RequestMethod.GET, url, params, PaymentSource.class, options);
  }

  /** List sources for a specified customer. */
  public PaymentSourceCollection list(String customer, PaymentSourceListParams params)
      throws StripeException {
    return list(customer, params, (RequestOptions) null);
  }

  /** List sources for a specified customer. */
  public PaymentSourceCollection list(
      String customer, PaymentSourceListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/customers/%s/sources", customer);
    return requestCollection(url, params, PaymentSourceCollection.class, options);
  }
}
