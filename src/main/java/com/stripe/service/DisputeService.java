// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.Dispute;
import com.stripe.model.DisputeCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.DisputeCloseParams;
import com.stripe.param.DisputeListParams;
import com.stripe.param.DisputeRetrieveParams;
import com.stripe.param.DisputeUpdateParams;

public class DisputeService extends ApiService {
  /**
   * When you get a dispute, contacting your customer is always the best first step. If that doesn’t
   * work, you can submit evidence to help us resolve the dispute in your favor. You can do this in
   * your <a href="https://dashboard.stripe.com/disputes">dashboard</a>, but if you prefer, you can
   * use the API to submit evidence programmatically.
   *
   * <p>Depending on your dispute type, different evidence fields will give you a better chance of
   * winning your dispute. To figure out which evidence fields to provide, see our <a
   * href="/docs/disputes/categories">guide to dispute types</a>.
   */
  public Dispute update(String id, DisputeUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /**
   * When you get a dispute, contacting your customer is always the best first step. If that doesn’t
   * work, you can submit evidence to help us resolve the dispute in your favor. You can do this in
   * your <a href="https://dashboard.stripe.com/disputes">dashboard</a>, but if you prefer, you can
   * use the API to submit evidence programmatically.
   *
   * <p>Depending on your dispute type, different evidence fields will give you a better chance of
   * winning your dispute. To figure out which evidence fields to provide, see our <a
   * href="/docs/disputes/categories">guide to dispute types</a>.
   */
  public Dispute update(String id, DisputeUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/disputes/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Dispute.class, options);
  }

  /** Retrieves the dispute with the given ID. */
  public Dispute retrieve(String dispute, DisputeRetrieveParams params) throws StripeException {
    return retrieve(dispute, params, (RequestOptions) null);
  }

  /** Retrieves the dispute with the given ID. */
  public Dispute retrieve(String dispute, DisputeRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/disputes/%s", dispute);
    return request(ApiResource.RequestMethod.GET, url, params, Dispute.class, options);
  }

  /** Returns a list of your disputes. */
  public DisputeCollection list(DisputeListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /** Returns a list of your disputes. */
  public DisputeCollection list(DisputeListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/disputes");
    return requestCollection(url, params, DisputeCollection.class, options);
  }

  /**
   * Closing the dispute for a charge indicates that you do not have any evidence to submit and are
   * essentially dismissing the dispute, acknowledging it as lost.
   *
   * <p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>.
   * <em>Closing a dispute is irreversible</em>.
   */
  public Dispute close(String id, DisputeCloseParams params) throws StripeException {
    return close(id, params, (RequestOptions) null);
  }

  /**
   * Closing the dispute for a charge indicates that you do not have any evidence to submit and are
   * essentially dismissing the dispute, acknowledging it as lost.
   *
   * <p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>.
   * <em>Closing a dispute is irreversible</em>.
   */
  public Dispute close(String id, DisputeCloseParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/disputes/%s/close", id);
    return request(ApiResource.RequestMethod.POST, url, params, Dispute.class, options);
  }
}
