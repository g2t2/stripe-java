// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.Topup;
import com.stripe.model.TopupCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.TopupCancelParams;
import com.stripe.param.TopupCreateParams;
import com.stripe.param.TopupListParams;
import com.stripe.param.TopupRetrieveParams;
import com.stripe.param.TopupUpdateParams;

public class TopupService extends ApiService {
  /** Cancels a top-up. Only pending top-ups can be canceled. */
  public Topup cancel(String id, TopupCancelParams params) throws StripeException {
    return cancel(id, params, (RequestOptions) null);
  }

  /** Cancels a top-up. Only pending top-ups can be canceled. */
  public Topup cancel(String id, TopupCancelParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/topups/%s/cancel", id);
    return request(ApiResource.RequestMethod.POST, url, params, Topup.class, options);
  }

  /** Updates the metadata of a top-up. Other top-up details are not editable by design. */
  public Topup update(String id, TopupUpdateParams params) throws StripeException {
    return update(id, params, (RequestOptions) null);
  }

  /** Updates the metadata of a top-up. Other top-up details are not editable by design. */
  public Topup update(String id, TopupUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/topups/%s", id);
    return request(ApiResource.RequestMethod.POST, url, params, Topup.class, options);
  }

  /**
   * Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID
   * that was returned from your previous request, and Stripe will return the corresponding top-up
   * information.
   */
  public Topup retrieve(String topup, TopupRetrieveParams params) throws StripeException {
    return retrieve(topup, params, (RequestOptions) null);
  }

  /**
   * Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID
   * that was returned from your previous request, and Stripe will return the corresponding top-up
   * information.
   */
  public Topup retrieve(String topup, TopupRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/topups/%s", topup);
    return request(ApiResource.RequestMethod.GET, url, params, Topup.class, options);
  }

  /** Top up the balance of an account. */
  public Topup create(TopupCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /** Top up the balance of an account. */
  public Topup create(TopupCreateParams params, RequestOptions options) throws StripeException {
    String url = resourceUrl("/v1/topups");
    return request(ApiResource.RequestMethod.POST, url, params, Topup.class, options);
  }

  /** Returns a list of top-ups. */
  public TopupCollection list(TopupListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /** Returns a list of top-ups. */
  public TopupCollection list(TopupListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/topups");
    return requestCollection(url, params, TopupCollection.class, options);
  }
}
